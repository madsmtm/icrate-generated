//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MLFeatureDescription;

    unsafe impl ClassType for MLFeatureDescription {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCoding for MLFeatureDescription {}

unsafe impl NSCopying for MLFeatureDescription {}

unsafe impl NSObjectProtocol for MLFeatureDescription {}

unsafe impl NSSecureCoding for MLFeatureDescription {}

extern_methods!(
    unsafe impl MLFeatureDescription {
        #[method_id(@__retain_semantics Other name)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        #[cfg(feature = "MLFeatureType")]
        #[method(type)]
        pub unsafe fn r#type(&self) -> MLFeatureType;

        #[method(isOptional)]
        pub unsafe fn isOptional(&self) -> bool;

        #[cfg(feature = "MLFeatureValue")]
        #[method(isAllowedValue:)]
        pub unsafe fn isAllowedValue(&self, value: &MLFeatureValue) -> bool;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl MLFeatureDescription {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_methods!(
    /// MLFeatureValueConstraints
    unsafe impl MLFeatureDescription {
        #[cfg(feature = "MLMultiArrayConstraint")]
        #[method_id(@__retain_semantics Other multiArrayConstraint)]
        pub unsafe fn multiArrayConstraint(&self) -> Option<Retained<MLMultiArrayConstraint>>;

        #[cfg(feature = "MLImageConstraint")]
        #[method_id(@__retain_semantics Other imageConstraint)]
        pub unsafe fn imageConstraint(&self) -> Option<Retained<MLImageConstraint>>;

        #[cfg(feature = "MLDictionaryConstraint")]
        #[method_id(@__retain_semantics Other dictionaryConstraint)]
        pub unsafe fn dictionaryConstraint(&self) -> Option<Retained<MLDictionaryConstraint>>;

        #[cfg(feature = "MLSequenceConstraint")]
        #[method_id(@__retain_semantics Other sequenceConstraint)]
        pub unsafe fn sequenceConstraint(&self) -> Option<Retained<MLSequenceConstraint>>;

        #[cfg(feature = "MLStateConstraint")]
        #[method_id(@__retain_semantics Other stateConstraint)]
        pub unsafe fn stateConstraint(&self) -> Option<Retained<MLStateConstraint>>;
    }
);
