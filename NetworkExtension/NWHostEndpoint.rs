//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "NWEndpoint")]
    #[deprecated = "Use `nw_endpoint_t` in Network framework instead, see deprecation notice in <NetworkExtension/NWHostEndpoint.h>"]
    pub struct NWHostEndpoint;

    #[cfg(feature = "NWEndpoint")]
    unsafe impl ClassType for NWHostEndpoint {
        #[inherits(NSObject)]
        type Super = NWEndpoint;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "NWEndpoint")]
unsafe impl NSCoding for NWHostEndpoint {}

#[cfg(feature = "NWEndpoint")]
unsafe impl NSCopying for NWHostEndpoint {}

#[cfg(feature = "NWEndpoint")]
unsafe impl NSObjectProtocol for NWHostEndpoint {}

#[cfg(feature = "NWEndpoint")]
unsafe impl NSSecureCoding for NWHostEndpoint {}

extern_methods!(
    #[cfg(feature = "NWEndpoint")]
    unsafe impl NWHostEndpoint {
        #[deprecated = "Use `nw_endpoint_create_host` in Network framework instead, see deprecation notice in <NetworkExtension/NWHostEndpoint.h>"]
        #[method_id(@__retain_semantics Other endpointWithHostname:port:)]
        pub unsafe fn endpointWithHostname_port(
            hostname: &NSString,
            port: &NSString,
        ) -> Retained<Self>;

        #[deprecated = "Use `nw_endpoint_get_hostname` in Network framework instead, see deprecation notice in <NetworkExtension/NWHostEndpoint.h>"]
        #[method_id(@__retain_semantics Other hostname)]
        pub unsafe fn hostname(&self) -> Retained<NSString>;

        #[deprecated = "Use `nw_endpoint_get_port` in Network framework instead, see deprecation notice in <NetworkExtension/NWHostEndpoint.h>"]
        #[method_id(@__retain_semantics Other port)]
        pub unsafe fn port(&self) -> Retained<NSString>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "NWEndpoint")]
    unsafe impl NWHostEndpoint {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
