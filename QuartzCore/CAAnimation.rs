//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_TYPED_ENUM
pub type CAAnimationCalculationMode = NSString;

// NS_TYPED_ENUM
pub type CAAnimationRotationMode = NSString;

// NS_TYPED_ENUM
pub type CATransitionType = NSString;

// NS_TYPED_ENUM
pub type CATransitionSubtype = NSString;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CAAnimation;

    unsafe impl ClassType for CAAnimation {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CALayer")]
unsafe impl CAAction for CAAnimation {}

#[cfg(feature = "CAMediaTiming")]
unsafe impl CAMediaTiming for CAAnimation {}

unsafe impl NSCoding for CAAnimation {}

unsafe impl NSCopying for CAAnimation {}

unsafe impl NSObjectProtocol for CAAnimation {}

unsafe impl NSSecureCoding for CAAnimation {}

extern_methods!(
    unsafe impl CAAnimation {
        #[method_id(@__retain_semantics Other animation)]
        pub unsafe fn animation() -> Retained<Self>;

        #[method_id(@__retain_semantics Other defaultValueForKey:)]
        pub unsafe fn default_value_for_key(key: &NSString) -> Option<Retained<AnyObject>>;

        #[method(shouldArchiveValueForKey:)]
        pub unsafe fn should_archive_value_for_key(&self, key: &NSString) -> bool;

        #[cfg(feature = "CAMediaTimingFunction")]
        #[method_id(@__retain_semantics Other timingFunction)]
        pub unsafe fn timing_function(&self) -> Option<Retained<CAMediaTimingFunction>>;

        #[cfg(feature = "CAMediaTimingFunction")]
        #[method(setTimingFunction:)]
        pub unsafe fn set_timing_function(&self, timing_function: Option<&CAMediaTimingFunction>);

        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(&self) -> Option<Retained<ProtocolObject<dyn CAAnimationDelegate>>>;

        #[method(setDelegate:)]
        pub unsafe fn set_delegate(
            &self,
            delegate: Option<&ProtocolObject<dyn CAAnimationDelegate>>,
        );

        #[method(isRemovedOnCompletion)]
        pub unsafe fn is_removed_on_completion(&self) -> bool;

        #[method(setRemovedOnCompletion:)]
        pub unsafe fn set_removed_on_completion(&self, removed_on_completion: bool);

        #[cfg(feature = "CAFrameRateRange")]
        #[method(preferredFrameRateRange)]
        pub unsafe fn preferred_frame_rate_range(&self) -> CAFrameRateRange;

        #[cfg(feature = "CAFrameRateRange")]
        #[method(setPreferredFrameRateRange:)]
        pub unsafe fn set_preferred_frame_rate_range(
            &self,
            preferred_frame_rate_range: CAFrameRateRange,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CAAnimation {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_protocol!(
    pub unsafe trait CAAnimationDelegate: NSObjectProtocol {
        #[optional]
        #[method(animationDidStart:)]
        unsafe fn animation_did_start(&self, anim: &CAAnimation);

        #[optional]
        #[method(animationDidStop:finished:)]
        unsafe fn animation_did_stop_finished(&self, anim: &CAAnimation, flag: bool);
    }

    unsafe impl ProtocolType for dyn CAAnimationDelegate {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CAPropertyAnimation;

    unsafe impl ClassType for CAPropertyAnimation {
        #[inherits(NSObject)]
        type Super = CAAnimation;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CALayer")]
unsafe impl CAAction for CAPropertyAnimation {}

#[cfg(feature = "CAMediaTiming")]
unsafe impl CAMediaTiming for CAPropertyAnimation {}

unsafe impl NSCoding for CAPropertyAnimation {}

unsafe impl NSCopying for CAPropertyAnimation {}

unsafe impl NSObjectProtocol for CAPropertyAnimation {}

unsafe impl NSSecureCoding for CAPropertyAnimation {}

extern_methods!(
    unsafe impl CAPropertyAnimation {
        #[method_id(@__retain_semantics Other animationWithKeyPath:)]
        pub unsafe fn animation_with_key_path(path: Option<&NSString>) -> Retained<Self>;

        #[method_id(@__retain_semantics Other keyPath)]
        pub unsafe fn key_path(&self) -> Option<Retained<NSString>>;

        #[method(setKeyPath:)]
        pub unsafe fn set_key_path(&self, key_path: Option<&NSString>);

        #[method(isAdditive)]
        pub unsafe fn is_additive(&self) -> bool;

        #[method(setAdditive:)]
        pub unsafe fn set_additive(&self, additive: bool);

        #[method(isCumulative)]
        pub unsafe fn is_cumulative(&self) -> bool;

        #[method(setCumulative:)]
        pub unsafe fn set_cumulative(&self, cumulative: bool);

        #[cfg(feature = "CAValueFunction")]
        #[method_id(@__retain_semantics Other valueFunction)]
        pub unsafe fn value_function(&self) -> Option<Retained<CAValueFunction>>;

        #[cfg(feature = "CAValueFunction")]
        #[method(setValueFunction:)]
        pub unsafe fn set_value_function(&self, value_function: Option<&CAValueFunction>);
    }
);

extern_methods!(
    /// Methods declared on superclass `CAAnimation`
    unsafe impl CAPropertyAnimation {
        #[method_id(@__retain_semantics Other animation)]
        pub unsafe fn animation() -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CAPropertyAnimation {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CABasicAnimation;

    unsafe impl ClassType for CABasicAnimation {
        #[inherits(CAAnimation, NSObject)]
        type Super = CAPropertyAnimation;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CALayer")]
unsafe impl CAAction for CABasicAnimation {}

#[cfg(feature = "CAMediaTiming")]
unsafe impl CAMediaTiming for CABasicAnimation {}

unsafe impl NSCoding for CABasicAnimation {}

unsafe impl NSCopying for CABasicAnimation {}

unsafe impl NSObjectProtocol for CABasicAnimation {}

unsafe impl NSSecureCoding for CABasicAnimation {}

extern_methods!(
    unsafe impl CABasicAnimation {
        #[method_id(@__retain_semantics Other fromValue)]
        pub unsafe fn from_value(&self) -> Option<Retained<AnyObject>>;

        #[method(setFromValue:)]
        pub unsafe fn set_from_value(&self, from_value: Option<&AnyObject>);

        #[method_id(@__retain_semantics Other toValue)]
        pub unsafe fn to_value(&self) -> Option<Retained<AnyObject>>;

        #[method(setToValue:)]
        pub unsafe fn set_to_value(&self, to_value: Option<&AnyObject>);

        #[method_id(@__retain_semantics Other byValue)]
        pub unsafe fn by_value(&self) -> Option<Retained<AnyObject>>;

        #[method(setByValue:)]
        pub unsafe fn set_by_value(&self, by_value: Option<&AnyObject>);
    }
);

extern_methods!(
    /// Methods declared on superclass `CAPropertyAnimation`
    unsafe impl CABasicAnimation {
        #[method_id(@__retain_semantics Other animationWithKeyPath:)]
        pub unsafe fn animation_with_key_path(path: Option<&NSString>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CAAnimation`
    unsafe impl CABasicAnimation {
        #[method_id(@__retain_semantics Other animation)]
        pub unsafe fn animation() -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CABasicAnimation {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CAKeyframeAnimation;

    unsafe impl ClassType for CAKeyframeAnimation {
        #[inherits(CAAnimation, NSObject)]
        type Super = CAPropertyAnimation;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CALayer")]
unsafe impl CAAction for CAKeyframeAnimation {}

#[cfg(feature = "CAMediaTiming")]
unsafe impl CAMediaTiming for CAKeyframeAnimation {}

unsafe impl NSCoding for CAKeyframeAnimation {}

unsafe impl NSCopying for CAKeyframeAnimation {}

unsafe impl NSObjectProtocol for CAKeyframeAnimation {}

unsafe impl NSSecureCoding for CAKeyframeAnimation {}

extern_methods!(
    unsafe impl CAKeyframeAnimation {
        #[method_id(@__retain_semantics Other values)]
        pub unsafe fn values(&self) -> Option<Retained<NSArray>>;

        #[method(setValues:)]
        pub unsafe fn set_values(&self, values: Option<&NSArray>);

        #[method_id(@__retain_semantics Other keyTimes)]
        pub unsafe fn key_times(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method(setKeyTimes:)]
        pub unsafe fn set_key_times(&self, key_times: Option<&NSArray<NSNumber>>);

        #[cfg(feature = "CAMediaTimingFunction")]
        #[method_id(@__retain_semantics Other timingFunctions)]
        pub unsafe fn timing_functions(&self) -> Option<Retained<NSArray<CAMediaTimingFunction>>>;

        #[cfg(feature = "CAMediaTimingFunction")]
        #[method(setTimingFunctions:)]
        pub unsafe fn set_timing_functions(
            &self,
            timing_functions: Option<&NSArray<CAMediaTimingFunction>>,
        );

        #[method_id(@__retain_semantics Other calculationMode)]
        pub unsafe fn calculation_mode(&self) -> Retained<CAAnimationCalculationMode>;

        #[method(setCalculationMode:)]
        pub unsafe fn set_calculation_mode(&self, calculation_mode: &CAAnimationCalculationMode);

        #[method_id(@__retain_semantics Other tensionValues)]
        pub unsafe fn tension_values(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method(setTensionValues:)]
        pub unsafe fn set_tension_values(&self, tension_values: Option<&NSArray<NSNumber>>);

        #[method_id(@__retain_semantics Other continuityValues)]
        pub unsafe fn continuity_values(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method(setContinuityValues:)]
        pub unsafe fn set_continuity_values(&self, continuity_values: Option<&NSArray<NSNumber>>);

        #[method_id(@__retain_semantics Other biasValues)]
        pub unsafe fn bias_values(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method(setBiasValues:)]
        pub unsafe fn set_bias_values(&self, bias_values: Option<&NSArray<NSNumber>>);

        #[method_id(@__retain_semantics Other rotationMode)]
        pub unsafe fn rotation_mode(&self) -> Option<Retained<CAAnimationRotationMode>>;

        #[method(setRotationMode:)]
        pub unsafe fn set_rotation_mode(&self, rotation_mode: Option<&CAAnimationRotationMode>);
    }
);

extern_methods!(
    /// Methods declared on superclass `CAPropertyAnimation`
    unsafe impl CAKeyframeAnimation {
        #[method_id(@__retain_semantics Other animationWithKeyPath:)]
        pub unsafe fn animation_with_key_path(path: Option<&NSString>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CAAnimation`
    unsafe impl CAKeyframeAnimation {
        #[method_id(@__retain_semantics Other animation)]
        pub unsafe fn animation() -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CAKeyframeAnimation {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern "C" {
    pub static kCAAnimationLinear: &'static CAAnimationCalculationMode;
}

extern "C" {
    pub static kCAAnimationDiscrete: &'static CAAnimationCalculationMode;
}

extern "C" {
    pub static kCAAnimationPaced: &'static CAAnimationCalculationMode;
}

extern "C" {
    pub static kCAAnimationCubic: &'static CAAnimationCalculationMode;
}

extern "C" {
    pub static kCAAnimationCubicPaced: &'static CAAnimationCalculationMode;
}

extern "C" {
    pub static kCAAnimationRotateAuto: &'static CAAnimationRotationMode;
}

extern "C" {
    pub static kCAAnimationRotateAutoReverse: &'static CAAnimationRotationMode;
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CASpringAnimation;

    unsafe impl ClassType for CASpringAnimation {
        #[inherits(CAPropertyAnimation, CAAnimation, NSObject)]
        type Super = CABasicAnimation;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CALayer")]
unsafe impl CAAction for CASpringAnimation {}

#[cfg(feature = "CAMediaTiming")]
unsafe impl CAMediaTiming for CASpringAnimation {}

unsafe impl NSCoding for CASpringAnimation {}

unsafe impl NSCopying for CASpringAnimation {}

unsafe impl NSObjectProtocol for CASpringAnimation {}

unsafe impl NSSecureCoding for CASpringAnimation {}

extern_methods!(
    unsafe impl CASpringAnimation {
        #[method(mass)]
        pub unsafe fn mass(&self) -> CGFloat;

        #[method(setMass:)]
        pub unsafe fn set_mass(&self, mass: CGFloat);

        #[method(stiffness)]
        pub unsafe fn stiffness(&self) -> CGFloat;

        #[method(setStiffness:)]
        pub unsafe fn set_stiffness(&self, stiffness: CGFloat);

        #[method(damping)]
        pub unsafe fn damping(&self) -> CGFloat;

        #[method(setDamping:)]
        pub unsafe fn set_damping(&self, damping: CGFloat);

        #[method(initialVelocity)]
        pub unsafe fn initial_velocity(&self) -> CGFloat;

        #[method(setInitialVelocity:)]
        pub unsafe fn set_initial_velocity(&self, initial_velocity: CGFloat);

        #[method(allowsOverdamping)]
        pub unsafe fn allows_overdamping(&self) -> bool;

        #[method(setAllowsOverdamping:)]
        pub unsafe fn set_allows_overdamping(&self, allows_overdamping: bool);

        #[method(settlingDuration)]
        pub unsafe fn settling_duration(&self) -> CFTimeInterval;

        #[method_id(@__retain_semantics Init initWithPerceptualDuration:bounce:)]
        pub unsafe fn init_with_perceptual_duration_bounce(
            this: Allocated<Self>,
            perceptual_duration: CFTimeInterval,
            bounce: CGFloat,
        ) -> Retained<Self>;

        #[method(perceptualDuration)]
        pub unsafe fn perceptual_duration(&self) -> CFTimeInterval;

        #[method(bounce)]
        pub unsafe fn bounce(&self) -> CGFloat;
    }
);

extern_methods!(
    /// Methods declared on superclass `CAPropertyAnimation`
    unsafe impl CASpringAnimation {
        #[method_id(@__retain_semantics Other animationWithKeyPath:)]
        pub unsafe fn animation_with_key_path(path: Option<&NSString>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CAAnimation`
    unsafe impl CASpringAnimation {
        #[method_id(@__retain_semantics Other animation)]
        pub unsafe fn animation() -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CASpringAnimation {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CATransition;

    unsafe impl ClassType for CATransition {
        #[inherits(NSObject)]
        type Super = CAAnimation;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CALayer")]
unsafe impl CAAction for CATransition {}

#[cfg(feature = "CAMediaTiming")]
unsafe impl CAMediaTiming for CATransition {}

unsafe impl NSCoding for CATransition {}

unsafe impl NSCopying for CATransition {}

unsafe impl NSObjectProtocol for CATransition {}

unsafe impl NSSecureCoding for CATransition {}

extern_methods!(
    unsafe impl CATransition {
        #[method_id(@__retain_semantics Other type)]
        pub unsafe fn r#type(&self) -> Retained<CATransitionType>;

        #[method(setType:)]
        pub unsafe fn set_type(&self, r#type: &CATransitionType);

        #[method_id(@__retain_semantics Other subtype)]
        pub unsafe fn subtype(&self) -> Option<Retained<CATransitionSubtype>>;

        #[method(setSubtype:)]
        pub unsafe fn set_subtype(&self, subtype: Option<&CATransitionSubtype>);

        #[method(startProgress)]
        pub unsafe fn start_progress(&self) -> c_float;

        #[method(setStartProgress:)]
        pub unsafe fn set_start_progress(&self, start_progress: c_float);

        #[method(endProgress)]
        pub unsafe fn end_progress(&self) -> c_float;

        #[method(setEndProgress:)]
        pub unsafe fn set_end_progress(&self, end_progress: c_float);

        #[method_id(@__retain_semantics Other filter)]
        pub unsafe fn filter(&self) -> Option<Retained<AnyObject>>;

        #[method(setFilter:)]
        pub unsafe fn set_filter(&self, filter: Option<&AnyObject>);
    }
);

extern_methods!(
    /// Methods declared on superclass `CAAnimation`
    unsafe impl CATransition {
        #[method_id(@__retain_semantics Other animation)]
        pub unsafe fn animation() -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CATransition {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern "C" {
    pub static kCATransitionFade: &'static CATransitionType;
}

extern "C" {
    pub static kCATransitionMoveIn: &'static CATransitionType;
}

extern "C" {
    pub static kCATransitionPush: &'static CATransitionType;
}

extern "C" {
    pub static kCATransitionReveal: &'static CATransitionType;
}

extern "C" {
    pub static kCATransitionFromRight: &'static CATransitionSubtype;
}

extern "C" {
    pub static kCATransitionFromLeft: &'static CATransitionSubtype;
}

extern "C" {
    pub static kCATransitionFromTop: &'static CATransitionSubtype;
}

extern "C" {
    pub static kCATransitionFromBottom: &'static CATransitionSubtype;
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CAAnimationGroup;

    unsafe impl ClassType for CAAnimationGroup {
        #[inherits(NSObject)]
        type Super = CAAnimation;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CALayer")]
unsafe impl CAAction for CAAnimationGroup {}

#[cfg(feature = "CAMediaTiming")]
unsafe impl CAMediaTiming for CAAnimationGroup {}

unsafe impl NSCoding for CAAnimationGroup {}

unsafe impl NSCopying for CAAnimationGroup {}

unsafe impl NSObjectProtocol for CAAnimationGroup {}

unsafe impl NSSecureCoding for CAAnimationGroup {}

extern_methods!(
    unsafe impl CAAnimationGroup {
        #[method_id(@__retain_semantics Other animations)]
        pub unsafe fn animations(&self) -> Option<Retained<NSArray<CAAnimation>>>;

        #[method(setAnimations:)]
        pub unsafe fn set_animations(&self, animations: Option<&NSArray<CAAnimation>>);
    }
);

extern_methods!(
    /// Methods declared on superclass `CAAnimation`
    unsafe impl CAAnimationGroup {
        #[method_id(@__retain_semantics Other animation)]
        pub unsafe fn animation() -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl CAAnimationGroup {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
