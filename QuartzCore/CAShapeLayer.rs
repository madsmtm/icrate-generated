//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_TYPED_ENUM
pub type CAShapeLayerFillRule = NSString;

// NS_TYPED_ENUM
pub type CAShapeLayerLineJoin = NSString;

// NS_TYPED_ENUM
pub type CAShapeLayerLineCap = NSString;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CALayer")]
    pub struct CAShapeLayer;

    #[cfg(feature = "CALayer")]
    unsafe impl ClassType for CAShapeLayer {
        #[inherits(NSObject)]
        type Super = CALayer;
        type Mutability = InteriorMutable;
    }
);

#[cfg(all(feature = "CALayer", feature = "CAMediaTiming"))]
unsafe impl CAMediaTiming for CAShapeLayer {}

#[cfg(feature = "CALayer")]
unsafe impl NSCoding for CAShapeLayer {}

#[cfg(feature = "CALayer")]
unsafe impl NSObjectProtocol for CAShapeLayer {}

#[cfg(feature = "CALayer")]
unsafe impl NSSecureCoding for CAShapeLayer {}

extern_methods!(
    #[cfg(feature = "CALayer")]
    unsafe impl CAShapeLayer {
        #[method_id(@__retain_semantics Other fillRule)]
        pub unsafe fn fill_rule(&self) -> Retained<CAShapeLayerFillRule>;

        #[method(setFillRule:)]
        pub unsafe fn set_fill_rule(&self, fill_rule: &CAShapeLayerFillRule);

        #[method(strokeStart)]
        pub unsafe fn stroke_start(&self) -> CGFloat;

        #[method(setStrokeStart:)]
        pub unsafe fn set_stroke_start(&self, stroke_start: CGFloat);

        #[method(strokeEnd)]
        pub unsafe fn stroke_end(&self) -> CGFloat;

        #[method(setStrokeEnd:)]
        pub unsafe fn set_stroke_end(&self, stroke_end: CGFloat);

        #[method(lineWidth)]
        pub unsafe fn line_width(&self) -> CGFloat;

        #[method(setLineWidth:)]
        pub unsafe fn set_line_width(&self, line_width: CGFloat);

        #[method(miterLimit)]
        pub unsafe fn miter_limit(&self) -> CGFloat;

        #[method(setMiterLimit:)]
        pub unsafe fn set_miter_limit(&self, miter_limit: CGFloat);

        #[method_id(@__retain_semantics Other lineCap)]
        pub unsafe fn line_cap(&self) -> Retained<CAShapeLayerLineCap>;

        #[method(setLineCap:)]
        pub unsafe fn set_line_cap(&self, line_cap: &CAShapeLayerLineCap);

        #[method_id(@__retain_semantics Other lineJoin)]
        pub unsafe fn line_join(&self) -> Retained<CAShapeLayerLineJoin>;

        #[method(setLineJoin:)]
        pub unsafe fn set_line_join(&self, line_join: &CAShapeLayerLineJoin);

        #[method(lineDashPhase)]
        pub unsafe fn line_dash_phase(&self) -> CGFloat;

        #[method(setLineDashPhase:)]
        pub unsafe fn set_line_dash_phase(&self, line_dash_phase: CGFloat);

        #[method_id(@__retain_semantics Other lineDashPattern)]
        pub unsafe fn line_dash_pattern(&self) -> Option<Retained<NSArray<NSNumber>>>;

        #[method(setLineDashPattern:)]
        pub unsafe fn set_line_dash_pattern(&self, line_dash_pattern: Option<&NSArray<NSNumber>>);
    }
);

extern_methods!(
    /// Methods declared on superclass `CALayer`
    #[cfg(feature = "CALayer")]
    unsafe impl CAShapeLayer {
        #[method_id(@__retain_semantics Other layer)]
        pub unsafe fn layer() -> Retained<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics Init initWithLayer:)]
        pub unsafe fn init_with_layer(this: Allocated<Self>, layer: &AnyObject) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "CALayer")]
    unsafe impl CAShapeLayer {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

extern "C" {
    pub static kCAFillRuleNonZero: &'static CAShapeLayerFillRule;
}

extern "C" {
    pub static kCAFillRuleEvenOdd: &'static CAShapeLayerFillRule;
}

extern "C" {
    pub static kCALineJoinMiter: &'static CAShapeLayerLineJoin;
}

extern "C" {
    pub static kCALineJoinRound: &'static CAShapeLayerLineJoin;
}

extern "C" {
    pub static kCALineJoinBevel: &'static CAShapeLayerLineJoin;
}

extern "C" {
    pub static kCALineCapButt: &'static CAShapeLayerLineCap;
}

extern "C" {
    pub static kCALineCapRound: &'static CAShapeLayerLineCap;
}

extern "C" {
    pub static kCALineCapSquare: &'static CAShapeLayerLineCap;
}
