//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    #[cfg(feature = "MTLResource")]
    pub unsafe trait MTLBuffer: MTLResource + IsRetainable {
        #[method(length)]
        fn length(&self) -> NSUInteger;

        #[method(contents)]
        fn contents(&self) -> NonNull<c_void>;

        #[method(didModifyRange:)]
        fn did_modify_range(&self, range: NSRange);

        #[cfg(feature = "MTLTexture")]
        #[method_id(@__retain_semantics New newTextureWithDescriptor:offset:bytesPerRow:)]
        fn new_texture_with_descriptor_offset_bytes_per_row(
            &self,
            descriptor: &MTLTextureDescriptor,
            offset: NSUInteger,
            bytes_per_row: NSUInteger,
        ) -> Option<Retained<ProtocolObject<dyn MTLTexture>>>;

        #[method(addDebugMarker:range:)]
        fn add_debug_marker_range(&self, marker: &NSString, range: NSRange);

        #[method(removeAllDebugMarkers)]
        fn remove_all_debug_markers(&self);

        #[method_id(@__retain_semantics Other remoteStorageBuffer)]
        fn remote_storage_buffer(&self) -> Option<Retained<ProtocolObject<dyn MTLBuffer>>>;

        #[cfg(feature = "MTLDevice")]
        #[method_id(@__retain_semantics New newRemoteBufferViewForDevice:)]
        fn new_remote_buffer_view_for_device(
            &self,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<ProtocolObject<dyn MTLBuffer>>>;

        #[method(gpuAddress)]
        fn gpu_address(&self) -> u64;
    }

    #[cfg(feature = "MTLResource")]
    unsafe impl ProtocolType for dyn MTLBuffer {}
);
