//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
    pub struct MTLRasterizationRateSampleArray;

    #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
    unsafe impl ClassType for MTLRasterizationRateSampleArray {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
    unsafe impl MTLRasterizationRateSampleArray {
        #[cfg(feature = "Foundation_NSNumber")]
        #[method_id(@__retain_semantics Other objectAtIndexedSubscript:)]
        pub unsafe fn objectAtIndexedSubscript(&self, index: NSUInteger) -> Id<NSNumber, Shared>;

        #[cfg(feature = "Foundation_NSNumber")]
        #[method(setObject:atIndexedSubscript:)]
        pub unsafe fn setObject_atIndexedSubscript(&self, value: &NSNumber, index: NSUInteger);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    pub struct MTLRasterizationRateLayerDescriptor;

    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    unsafe impl ClassType for MTLRasterizationRateLayerDescriptor {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    unsafe impl MTLRasterizationRateLayerDescriptor {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Init initWithSampleCount:)]
        pub unsafe fn initWithSampleCount(
            this: Option<Allocated<Self>>,
            sample_count: MTLSize,
        ) -> Id<Self, Shared>;

        #[method_id(@__retain_semantics Init initWithSampleCount:horizontal:vertical:)]
        pub unsafe fn initWithSampleCount_horizontal_vertical(
            this: Option<Allocated<Self>>,
            sample_count: MTLSize,
            horizontal: NonNull<c_float>,
            vertical: NonNull<c_float>,
        ) -> Id<Self, Shared>;

        #[method(maxSampleCount)]
        pub unsafe fn maxSampleCount(&self) -> MTLSize;

        #[method(horizontalSampleStorage)]
        pub unsafe fn horizontalSampleStorage(&self) -> NonNull<c_float>;

        #[method(verticalSampleStorage)]
        pub unsafe fn verticalSampleStorage(&self) -> NonNull<c_float>;

        #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
        #[method_id(@__retain_semantics Other horizontal)]
        pub unsafe fn horizontal(&self) -> Id<MTLRasterizationRateSampleArray, Shared>;

        #[cfg(feature = "Metal_MTLRasterizationRateSampleArray")]
        #[method_id(@__retain_semantics Other vertical)]
        pub unsafe fn vertical(&self) -> Id<MTLRasterizationRateSampleArray, Shared>;
    }
);

extern_methods!(
    #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
    unsafe impl MTLRasterizationRateLayerDescriptor {}
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
    pub struct MTLRasterizationRateLayerArray;

    #[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
    unsafe impl ClassType for MTLRasterizationRateLayerArray {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
    unsafe impl MTLRasterizationRateLayerArray {
        #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
        #[method_id(@__retain_semantics Other objectAtIndexedSubscript:)]
        pub unsafe fn objectAtIndexedSubscript(
            &self,
            layer_index: NSUInteger,
        ) -> Option<Id<MTLRasterizationRateLayerDescriptor, Shared>>;

        #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
        #[method(setObject:atIndexedSubscript:)]
        pub unsafe fn setObject_atIndexedSubscript(
            &self,
            layer: Option<&MTLRasterizationRateLayerDescriptor>,
            layer_index: NSUInteger,
        );
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Metal_MTLRasterizationRateMapDescriptor")]
    pub struct MTLRasterizationRateMapDescriptor;

    #[cfg(feature = "Metal_MTLRasterizationRateMapDescriptor")]
    unsafe impl ClassType for MTLRasterizationRateMapDescriptor {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Metal_MTLRasterizationRateMapDescriptor")]
    unsafe impl MTLRasterizationRateMapDescriptor {
        #[method_id(@__retain_semantics Other rasterizationRateMapDescriptorWithScreenSize:)]
        pub unsafe fn rasterizationRateMapDescriptorWithScreenSize(
            screen_size: MTLSize,
        ) -> Id<MTLRasterizationRateMapDescriptor, Shared>;

        #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
        #[method_id(@__retain_semantics Other rasterizationRateMapDescriptorWithScreenSize:layer:)]
        pub unsafe fn rasterizationRateMapDescriptorWithScreenSize_layer(
            screen_size: MTLSize,
            layer: &MTLRasterizationRateLayerDescriptor,
        ) -> Id<MTLRasterizationRateMapDescriptor, Shared>;

        #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
        #[method_id(@__retain_semantics Other rasterizationRateMapDescriptorWithScreenSize:layerCount:layers:)]
        pub unsafe fn rasterizationRateMapDescriptorWithScreenSize_layerCount_layers(
            screen_size: MTLSize,
            layer_count: NSUInteger,
            layers: NonNull<NonNull<MTLRasterizationRateLayerDescriptor>>,
        ) -> Id<MTLRasterizationRateMapDescriptor, Shared>;

        #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
        #[method_id(@__retain_semantics Other layerAtIndex:)]
        pub unsafe fn layerAtIndex(
            &self,
            layer_index: NSUInteger,
        ) -> Option<Id<MTLRasterizationRateLayerDescriptor, Shared>>;

        #[cfg(feature = "Metal_MTLRasterizationRateLayerDescriptor")]
        #[method(setLayer:atIndex:)]
        pub unsafe fn setLayer_atIndex(
            &self,
            layer: Option<&MTLRasterizationRateLayerDescriptor>,
            layer_index: NSUInteger,
        );

        #[cfg(feature = "Metal_MTLRasterizationRateLayerArray")]
        #[method_id(@__retain_semantics Other layers)]
        pub unsafe fn layers(&self) -> Id<MTLRasterizationRateLayerArray, Shared>;

        #[method(screenSize)]
        pub unsafe fn screenSize(&self) -> MTLSize;

        #[method(setScreenSize:)]
        pub unsafe fn setScreenSize(&self, screen_size: MTLSize);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Option<Id<NSString, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setLabel:)]
        pub unsafe fn setLabel(&self, label: Option<&NSString>);

        #[method(layerCount)]
        pub unsafe fn layerCount(&self) -> NSUInteger;
    }
);

extern_protocol!(
    pub struct MTLRasterizationRateMap;

    unsafe impl ProtocolType for MTLRasterizationRateMap {
        #[method_id(@__retain_semantics Other device)]
        pub unsafe fn device(&self) -> Id<MTLDevice, Shared>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other label)]
        pub unsafe fn label(&self) -> Option<Id<NSString, Shared>>;

        #[method(screenSize)]
        pub unsafe fn screenSize(&self) -> MTLSize;

        #[method(physicalGranularity)]
        pub unsafe fn physicalGranularity(&self) -> MTLSize;

        #[method(layerCount)]
        pub unsafe fn layerCount(&self) -> NSUInteger;

        #[method(parameterBufferSizeAndAlign)]
        pub unsafe fn parameterBufferSizeAndAlign(&self) -> MTLSizeAndAlign;

        #[method(copyParameterDataToBuffer:offset:)]
        pub unsafe fn copyParameterDataToBuffer_offset(
            &self,
            buffer: &MTLBuffer,
            offset: NSUInteger,
        );

        #[method(physicalSizeForLayer:)]
        pub unsafe fn physicalSizeForLayer(&self, layer_index: NSUInteger) -> MTLSize;

        #[method(mapScreenToPhysicalCoordinates:forLayer:)]
        pub unsafe fn mapScreenToPhysicalCoordinates_forLayer(
            &self,
            screen_coordinates: MTLCoordinate2D,
            layer_index: NSUInteger,
        ) -> MTLCoordinate2D;

        #[method(mapPhysicalToScreenCoordinates:forLayer:)]
        pub unsafe fn mapPhysicalToScreenCoordinates_forLayer(
            &self,
            physical_coordinates: MTLCoordinate2D,
            layer_index: NSUInteger,
        ) -> MTLCoordinate2D;
    }
);
