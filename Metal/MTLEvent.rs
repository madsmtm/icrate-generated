//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Metal::*;

extern_protocol!(
    pub struct MTLEvent;

    unsafe impl ProtocolType for MTLEvent {
        #[method_id(@__retain_semantics Other device)]
        pub fn device(&self) -> Option<Id<MTLDevice, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other label)]
        pub fn label(&self) -> Option<Id<NSString, Shared>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setLabel:)]
        pub fn setLabel(&self, label: Option<&NSString>);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Metal_MTLSharedEventListener")]
    pub struct MTLSharedEventListener;

    #[cfg(feature = "Metal_MTLSharedEventListener")]
    unsafe impl ClassType for MTLSharedEventListener {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Metal_MTLSharedEventListener")]
    unsafe impl MTLSharedEventListener {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self, Shared>;
    }
);

pub type MTLSharedEventNotificationBlock = *mut Block<(NonNull<MTLSharedEvent>, u64), ()>;

extern_protocol!(
    pub struct MTLSharedEvent;

    unsafe impl ProtocolType for MTLSharedEvent {
        #[cfg(feature = "Metal_MTLSharedEventListener")]
        #[method(notifyListener:atValue:block:)]
        pub unsafe fn notifyListener_atValue_block(
            &self,
            listener: &MTLSharedEventListener,
            value: u64,
            block: MTLSharedEventNotificationBlock,
        );

        #[cfg(feature = "Metal_MTLSharedEventHandle")]
        #[method_id(@__retain_semantics New newSharedEventHandle)]
        pub unsafe fn newSharedEventHandle(&self) -> Id<MTLSharedEventHandle, Shared>;

        #[method(signaledValue)]
        pub unsafe fn signaledValue(&self) -> u64;

        #[method(setSignaledValue:)]
        pub unsafe fn setSignaledValue(&self, signaled_value: u64);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Metal_MTLSharedEventHandle")]
    pub struct MTLSharedEventHandle;

    #[cfg(feature = "Metal_MTLSharedEventHandle")]
    unsafe impl ClassType for MTLSharedEventHandle {
        type Super = NSObject;
    }
);

extern_methods!(
    #[cfg(feature = "Metal_MTLSharedEventHandle")]
    unsafe impl MTLSharedEventHandle {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other label)]
        pub fn label(&self) -> Option<Id<NSString, Shared>>;
    }
);
