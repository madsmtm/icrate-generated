//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct HKWorkoutEffortRelationship;

    unsafe impl ClassType for HKWorkoutEffortRelationship {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSCoding for HKWorkoutEffortRelationship {}

unsafe impl NSCopying for HKWorkoutEffortRelationship {}

unsafe impl NSObjectProtocol for HKWorkoutEffortRelationship {}

unsafe impl NSSecureCoding for HKWorkoutEffortRelationship {}

extern_methods!(
    unsafe impl HKWorkoutEffortRelationship {
        #[cfg(all(feature = "HKObject", feature = "HKSample", feature = "HKWorkout"))]
        #[method_id(@__retain_semantics Other workout)]
        pub unsafe fn workout(&self) -> Retained<HKWorkout>;

        #[cfg(feature = "HKWorkoutActivity")]
        #[method_id(@__retain_semantics Other activity)]
        pub unsafe fn activity(&self) -> Option<Retained<HKWorkoutActivity>>;

        #[cfg(all(feature = "HKObject", feature = "HKSample"))]
        #[method_id(@__retain_semantics Other samples)]
        pub unsafe fn samples(&self) -> Option<Retained<NSArray<HKSample>>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl HKWorkoutEffortRelationship {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct HKWorkoutEffortRelationshipQueryOptions(pub NSInteger);
impl HKWorkoutEffortRelationshipQueryOptions {
    #[doc(alias = "HKWorkoutEffortRelationshipQueryOptionsDefault")]
    pub const Default: Self = Self(0);
    #[doc(alias = "HKWorkoutEffortRelationshipQueryOptionsMostRelevant")]
    pub const MostRelevant: Self = Self(1 << 0);
}

unsafe impl Encode for HKWorkoutEffortRelationshipQueryOptions {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for HKWorkoutEffortRelationshipQueryOptions {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "HKQuery")]
    pub struct HKWorkoutEffortRelationshipQuery;

    #[cfg(feature = "HKQuery")]
    unsafe impl ClassType for HKWorkoutEffortRelationshipQuery {
        #[inherits(NSObject)]
        type Super = HKQuery;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "HKQuery")]
unsafe impl NSObjectProtocol for HKWorkoutEffortRelationshipQuery {}

extern_methods!(
    #[cfg(feature = "HKQuery")]
    unsafe impl HKWorkoutEffortRelationshipQuery {
        #[cfg(all(feature = "HKQueryAnchor", feature = "block2"))]
        #[method_id(@__retain_semantics Init initWithPredicate:anchor:options:resultsHandler:)]
        pub unsafe fn initWithPredicate_anchor_options_resultsHandler(
            this: Allocated<Self>,
            predicate: Option<&NSPredicate>,
            anchor: Option<&HKQueryAnchor>,
            options: HKWorkoutEffortRelationshipQueryOptions,
            results_handler: &block2::Block<
                dyn Fn(
                    NonNull<HKWorkoutEffortRelationshipQuery>,
                    *mut NSArray<HKWorkoutEffortRelationship>,
                    *mut HKQueryAnchor,
                    *mut NSError,
                ),
            >,
        ) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `HKQuery`
    #[cfg(feature = "HKQuery")]
    unsafe impl HKWorkoutEffortRelationshipQuery {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "HKQuery")]
    unsafe impl HKWorkoutEffortRelationshipQuery {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
