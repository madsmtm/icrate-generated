//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

typed_extensible_enum!(
    pub type NSDraggingImageComponentKey = NSString;
);

extern_static!(NSDraggingImageComponentIconKey: &'static NSDraggingImageComponentKey);

extern_static!(NSDraggingImageComponentLabelKey: &'static NSDraggingImageComponentKey);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSDraggingImageComponent")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSDraggingImageComponent;

    #[cfg(feature = "AppKit_NSDraggingImageComponent")]
    unsafe impl ClassType for NSDraggingImageComponent {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSDraggingImageComponent")]
unsafe impl NSObjectProtocol for NSDraggingImageComponent {}

extern_methods!(
    #[cfg(feature = "AppKit_NSDraggingImageComponent")]
    unsafe impl NSDraggingImageComponent {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other draggingImageComponentWithKey:)]
        pub unsafe fn draggingImageComponentWithKey(
            key: &NSDraggingImageComponentKey,
        ) -> Id<NSDraggingImageComponent>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init initWithKey:)]
        pub unsafe fn initWithKey(
            this: Option<Allocated<Self>>,
            key: &NSDraggingImageComponentKey,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other key)]
        pub unsafe fn key(&self) -> Id<NSDraggingImageComponentKey>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setKey:)]
        pub unsafe fn setKey(&self, key: &NSDraggingImageComponentKey);

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other contents)]
        pub unsafe fn contents(&self) -> Option<Id<Object>>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setContents:)]
        pub unsafe fn setContents(&self, contents: Option<&Object>);

        #[cfg(not(any(target_os = "ios")))]
        #[method(frame)]
        pub unsafe fn frame(&self) -> NSRect;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setFrame:)]
        pub unsafe fn setFrame(&self, frame: NSRect);
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSDraggingItem")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSDraggingItem;

    #[cfg(feature = "AppKit_NSDraggingItem")]
    unsafe impl ClassType for NSDraggingItem {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSDraggingItem")]
unsafe impl NSObjectProtocol for NSDraggingItem {}

extern_methods!(
    #[cfg(feature = "AppKit_NSDraggingItem")]
    unsafe impl NSDraggingItem {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init initWithPasteboardWriter:)]
        pub unsafe fn initWithPasteboardWriter(
            this: Option<Allocated<Self>>,
            pasteboard_writer: &ProtocolObject<dyn NSPasteboardWriting>,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other item)]
        pub unsafe fn item(&self) -> Id<Object>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(draggingFrame)]
        pub unsafe fn draggingFrame(&self) -> NSRect;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setDraggingFrame:)]
        pub unsafe fn setDraggingFrame(&self, dragging_frame: NSRect);

        #[cfg(all(
            feature = "AppKit_NSDraggingImageComponent",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method(imageComponentsProvider)]
        pub unsafe fn imageComponentsProvider(
            &self,
        ) -> *mut Block<(), NonNull<NSArray<NSDraggingImageComponent>>>;

        #[cfg(all(
            feature = "AppKit_NSDraggingImageComponent",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method(setImageComponentsProvider:)]
        pub unsafe fn setImageComponentsProvider(
            &self,
            image_components_provider: Option<
                &Block<(), NonNull<NSArray<NSDraggingImageComponent>>>,
            >,
        );

        #[cfg(not(any(target_os = "ios")))]
        #[method(setDraggingFrame:contents:)]
        pub unsafe fn setDraggingFrame_contents(&self, frame: NSRect, contents: Option<&Object>);

        #[cfg(all(
            feature = "AppKit_NSDraggingImageComponent",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other imageComponents)]
        pub unsafe fn imageComponents(&self) -> Option<Id<NSArray<NSDraggingImageComponent>>>;
    }
);
