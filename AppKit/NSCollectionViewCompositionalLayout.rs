//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::CoreData::*;
use crate::Foundation::*;

ns_options!(
    #[underlying(NSUInteger)]
    #[cfg(not(any(target_os = "ios")))]
    pub enum NSDirectionalRectEdge {
        #[cfg(not(any(target_os = "ios")))]
        NSDirectionalRectEdgeNone = 0,
        #[cfg(not(any(target_os = "ios")))]
        NSDirectionalRectEdgeTop = 1 << 0,
        #[cfg(not(any(target_os = "ios")))]
        NSDirectionalRectEdgeLeading = 1 << 1,
        #[cfg(not(any(target_os = "ios")))]
        NSDirectionalRectEdgeBottom = 1 << 2,
        #[cfg(not(any(target_os = "ios")))]
        NSDirectionalRectEdgeTrailing = 1 << 3,
        #[cfg(not(any(target_os = "ios")))]
        NSDirectionalRectEdgeAll = NSDirectionalRectEdgeTop
            | NSDirectionalRectEdgeLeading
            | NSDirectionalRectEdgeBottom
            | NSDirectionalRectEdgeTrailing,
    }
);

extern_struct!(
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSDirectionalEdgeInsets {
        pub top: CGFloat,
        pub leading: CGFloat,
        pub bottom: CGFloat,
        pub trailing: CGFloat,
    }
);

extern_static!(NSDirectionalEdgeInsetsZero: NSDirectionalEdgeInsets);

ns_enum!(
    #[underlying(NSInteger)]
    #[cfg(not(any(target_os = "ios")))]
    pub enum NSRectAlignment {
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentNone = 0,
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentTop = 1,
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentTopLeading = 2,
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentLeading = 3,
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentBottomLeading = 4,
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentBottom = 5,
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentBottomTrailing = 6,
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentTrailing = 7,
        #[cfg(not(any(target_os = "ios")))]
        NSRectAlignmentTopTrailing = 8,
    }
);

inline_fn!(
    #[cfg(not(any(target_os = "ios")))]
    pub unsafe fn NSDirectionalEdgeInsetsMake(
        top: CGFloat,
        leading: CGFloat,
        bottom: CGFloat,
        trailing: CGFloat,
    ) -> NSDirectionalEdgeInsets {
        todo!()
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayoutConfiguration")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionViewCompositionalLayoutConfiguration;

    #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayoutConfiguration")]
    unsafe impl ClassType for NSCollectionViewCompositionalLayoutConfiguration {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionViewCompositionalLayoutConfiguration")]
unsafe impl NSObjectProtocol for NSCollectionViewCompositionalLayoutConfiguration {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayoutConfiguration")]
    unsafe impl NSCollectionViewCompositionalLayoutConfiguration {
        #[cfg(not(any(target_os = "ios")))]
        #[method(scrollDirection)]
        pub unsafe fn scrollDirection(&self) -> NSCollectionViewScrollDirection;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setScrollDirection:)]
        pub unsafe fn setScrollDirection(&self, scroll_direction: NSCollectionViewScrollDirection);

        #[cfg(not(any(target_os = "ios")))]
        #[method(interSectionSpacing)]
        pub unsafe fn interSectionSpacing(&self) -> CGFloat;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setInterSectionSpacing:)]
        pub unsafe fn setInterSectionSpacing(&self, inter_section_spacing: CGFloat);

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other boundarySupplementaryItems)]
        pub unsafe fn boundarySupplementaryItems(
            &self,
        ) -> Id<NSArray<NSCollectionLayoutBoundarySupplementaryItem>>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method(setBoundarySupplementaryItems:)]
        pub unsafe fn setBoundarySupplementaryItems(
            &self,
            boundary_supplementary_items: &NSArray<NSCollectionLayoutBoundarySupplementaryItem>,
        );
    }
);

pub type NSCollectionViewCompositionalLayoutSectionProvider = *mut Block<
    (
        NSInteger,
        NonNull<ProtocolObject<dyn NSCollectionLayoutEnvironment>>,
    ),
    *mut NSCollectionLayoutSection,
>;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayout")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionViewCompositionalLayout;

    #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayout")]
    unsafe impl ClassType for NSCollectionViewCompositionalLayout {
        #[inherits(NSObject)]
        type Super = NSCollectionViewLayout;
    }
);

#[cfg(feature = "AppKit_NSCollectionViewCompositionalLayout")]
unsafe impl NSCoding for NSCollectionViewCompositionalLayout {}

#[cfg(feature = "AppKit_NSCollectionViewCompositionalLayout")]
unsafe impl NSObjectProtocol for NSCollectionViewCompositionalLayout {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayout")]
    unsafe impl NSCollectionViewCompositionalLayout {
        #[cfg(feature = "AppKit_NSCollectionLayoutSection")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init initWithSection:)]
        pub unsafe fn initWithSection(
            this: Option<Allocated<Self>>,
            section: &NSCollectionLayoutSection,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSection",
            feature = "AppKit_NSCollectionViewCompositionalLayoutConfiguration"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init initWithSection:configuration:)]
        pub unsafe fn initWithSection_configuration(
            this: Option<Allocated<Self>>,
            section: &NSCollectionLayoutSection,
            configuration: &NSCollectionViewCompositionalLayoutConfiguration,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init initWithSectionProvider:)]
        pub unsafe fn initWithSectionProvider(
            this: Option<Allocated<Self>>,
            section_provider: NSCollectionViewCompositionalLayoutSectionProvider,
        ) -> Id<Self>;

        #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayoutConfiguration")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init initWithSectionProvider:configuration:)]
        pub unsafe fn initWithSectionProvider_configuration(
            this: Option<Allocated<Self>>,
            section_provider: NSCollectionViewCompositionalLayoutSectionProvider,
            configuration: &NSCollectionViewCompositionalLayoutConfiguration,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayoutConfiguration")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other configuration)]
        pub unsafe fn configuration(&self) -> Id<NSCollectionViewCompositionalLayoutConfiguration>;

        #[cfg(feature = "AppKit_NSCollectionViewCompositionalLayoutConfiguration")]
        #[cfg(not(any(target_os = "ios")))]
        #[method(setConfiguration:)]
        pub unsafe fn setConfiguration(
            &self,
            configuration: &NSCollectionViewCompositionalLayoutConfiguration,
        );
    }
);

ns_enum!(
    #[underlying(NSInteger)]
    #[cfg(not(any(target_os = "ios")))]
    pub enum NSCollectionLayoutSectionOrthogonalScrollingBehavior {
        #[cfg(not(any(target_os = "ios")))]
        NSCollectionLayoutSectionOrthogonalScrollingBehaviorNone = 0,
        #[cfg(not(any(target_os = "ios")))]
        NSCollectionLayoutSectionOrthogonalScrollingBehaviorContinuous = 1,
        #[cfg(not(any(target_os = "ios")))]
        NSCollectionLayoutSectionOrthogonalScrollingBehaviorContinuousGroupLeadingBoundary = 2,
        #[cfg(not(any(target_os = "ios")))]
        NSCollectionLayoutSectionOrthogonalScrollingBehaviorPaging = 3,
        #[cfg(not(any(target_os = "ios")))]
        NSCollectionLayoutSectionOrthogonalScrollingBehaviorGroupPaging = 4,
        #[cfg(not(any(target_os = "ios")))]
        NSCollectionLayoutSectionOrthogonalScrollingBehaviorGroupPagingCentered = 5,
    }
);

pub type NSCollectionLayoutSectionVisibleItemsInvalidationHandler = *mut Block<
    (
        NonNull<NSArray<ProtocolObject<dyn NSCollectionLayoutVisibleItem>>>,
        NSPoint,
        NonNull<ProtocolObject<dyn NSCollectionLayoutEnvironment>>,
    ),
    (),
>;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutSection")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutSection;

    #[cfg(feature = "AppKit_NSCollectionLayoutSection")]
    unsafe impl ClassType for NSCollectionLayoutSection {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutSection")]
unsafe impl NSObjectProtocol for NSCollectionLayoutSection {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutSection")]
    unsafe impl NSCollectionLayoutSection {
        #[cfg(feature = "AppKit_NSCollectionLayoutGroup")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other sectionWithGroup:)]
        pub unsafe fn sectionWithGroup(group: &NSCollectionLayoutGroup) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(contentInsets)]
        pub unsafe fn contentInsets(&self) -> NSDirectionalEdgeInsets;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setContentInsets:)]
        pub unsafe fn setContentInsets(&self, content_insets: NSDirectionalEdgeInsets);

        #[cfg(not(any(target_os = "ios")))]
        #[method(interGroupSpacing)]
        pub unsafe fn interGroupSpacing(&self) -> CGFloat;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setInterGroupSpacing:)]
        pub unsafe fn setInterGroupSpacing(&self, inter_group_spacing: CGFloat);

        #[cfg(not(any(target_os = "ios")))]
        #[method(orthogonalScrollingBehavior)]
        pub unsafe fn orthogonalScrollingBehavior(
            &self,
        ) -> NSCollectionLayoutSectionOrthogonalScrollingBehavior;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setOrthogonalScrollingBehavior:)]
        pub unsafe fn setOrthogonalScrollingBehavior(
            &self,
            orthogonal_scrolling_behavior: NSCollectionLayoutSectionOrthogonalScrollingBehavior,
        );

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other boundarySupplementaryItems)]
        pub unsafe fn boundarySupplementaryItems(
            &self,
        ) -> Id<NSArray<NSCollectionLayoutBoundarySupplementaryItem>>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method(setBoundarySupplementaryItems:)]
        pub unsafe fn setBoundarySupplementaryItems(
            &self,
            boundary_supplementary_items: &NSArray<NSCollectionLayoutBoundarySupplementaryItem>,
        );

        #[cfg(not(any(target_os = "ios")))]
        #[method(supplementariesFollowContentInsets)]
        pub unsafe fn supplementariesFollowContentInsets(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setSupplementariesFollowContentInsets:)]
        pub unsafe fn setSupplementariesFollowContentInsets(
            &self,
            supplementaries_follow_content_insets: bool,
        );

        #[cfg(not(any(target_os = "ios")))]
        #[method(visibleItemsInvalidationHandler)]
        pub unsafe fn visibleItemsInvalidationHandler(
            &self,
        ) -> NSCollectionLayoutSectionVisibleItemsInvalidationHandler;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setVisibleItemsInvalidationHandler:)]
        pub unsafe fn setVisibleItemsInvalidationHandler(
            &self,
            visible_items_invalidation_handler: NSCollectionLayoutSectionVisibleItemsInvalidationHandler,
        );

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutDecorationItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other decorationItems)]
        pub unsafe fn decorationItems(&self) -> Id<NSArray<NSCollectionLayoutDecorationItem>>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutDecorationItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method(setDecorationItems:)]
        pub unsafe fn setDecorationItems(
            &self,
            decoration_items: &NSArray<NSCollectionLayoutDecorationItem>,
        );
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutItem")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutItem;

    #[cfg(feature = "AppKit_NSCollectionLayoutItem")]
    unsafe impl ClassType for NSCollectionLayoutItem {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutItem")]
unsafe impl NSObjectProtocol for NSCollectionLayoutItem {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutItem")]
    unsafe impl NSCollectionLayoutItem {
        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:)]
        pub unsafe fn itemWithLayoutSize(layout_size: &NSCollectionLayoutSize) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "AppKit_NSCollectionLayoutSupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:supplementaryItems:)]
        pub unsafe fn itemWithLayoutSize_supplementaryItems(
            layout_size: &NSCollectionLayoutSize,
            supplementary_items: &NSArray<NSCollectionLayoutSupplementaryItem>,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(contentInsets)]
        pub unsafe fn contentInsets(&self) -> NSDirectionalEdgeInsets;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setContentInsets:)]
        pub unsafe fn setContentInsets(&self, content_insets: NSDirectionalEdgeInsets);

        #[cfg(feature = "AppKit_NSCollectionLayoutEdgeSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other edgeSpacing)]
        pub unsafe fn edgeSpacing(&self) -> Option<Id<NSCollectionLayoutEdgeSpacing>>;

        #[cfg(feature = "AppKit_NSCollectionLayoutEdgeSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method(setEdgeSpacing:)]
        pub unsafe fn setEdgeSpacing(&self, edge_spacing: Option<&NSCollectionLayoutEdgeSpacing>);

        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other layoutSize)]
        pub unsafe fn layoutSize(&self) -> Id<NSCollectionLayoutSize>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other supplementaryItems)]
        pub unsafe fn supplementaryItems(&self)
            -> Id<NSArray<NSCollectionLayoutSupplementaryItem>>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutGroupCustomItem")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutGroupCustomItem;

    #[cfg(feature = "AppKit_NSCollectionLayoutGroupCustomItem")]
    unsafe impl ClassType for NSCollectionLayoutGroupCustomItem {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutGroupCustomItem")]
unsafe impl NSObjectProtocol for NSCollectionLayoutGroupCustomItem {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutGroupCustomItem")]
    unsafe impl NSCollectionLayoutGroupCustomItem {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other customItemWithFrame:)]
        pub unsafe fn customItemWithFrame(frame: NSRect) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other customItemWithFrame:zIndex:)]
        pub unsafe fn customItemWithFrame_zIndex(frame: NSRect, z_index: NSInteger) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(frame)]
        pub unsafe fn frame(&self) -> NSRect;

        #[cfg(not(any(target_os = "ios")))]
        #[method(zIndex)]
        pub unsafe fn zIndex(&self) -> NSInteger;
    }
);

pub type NSCollectionLayoutGroupCustomItemProvider = *mut Block<
    (NonNull<ProtocolObject<dyn NSCollectionLayoutEnvironment>>,),
    NonNull<NSArray<NSCollectionLayoutGroupCustomItem>>,
>;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutGroup")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutGroup;

    #[cfg(feature = "AppKit_NSCollectionLayoutGroup")]
    unsafe impl ClassType for NSCollectionLayoutGroup {
        #[inherits(NSObject)]
        type Super = NSCollectionLayoutItem;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutGroup")]
unsafe impl NSObjectProtocol for NSCollectionLayoutGroup {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutGroup")]
    unsafe impl NSCollectionLayoutGroup {
        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other horizontalGroupWithLayoutSize:subitem:count:)]
        pub unsafe fn horizontalGroupWithLayoutSize_subitem_count(
            layout_size: &NSCollectionLayoutSize,
            subitem: &NSCollectionLayoutItem,
            count: NSInteger,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other horizontalGroupWithLayoutSize:subitems:)]
        pub unsafe fn horizontalGroupWithLayoutSize_subitems(
            layout_size: &NSCollectionLayoutSize,
            subitems: &NSArray<NSCollectionLayoutItem>,
        ) -> Id<Self>;

        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other verticalGroupWithLayoutSize:subitem:count:)]
        pub unsafe fn verticalGroupWithLayoutSize_subitem_count(
            layout_size: &NSCollectionLayoutSize,
            subitem: &NSCollectionLayoutItem,
            count: NSInteger,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other verticalGroupWithLayoutSize:subitems:)]
        pub unsafe fn verticalGroupWithLayoutSize_subitems(
            layout_size: &NSCollectionLayoutSize,
            subitems: &NSArray<NSCollectionLayoutItem>,
        ) -> Id<Self>;

        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other customGroupWithLayoutSize:itemProvider:)]
        pub unsafe fn customGroupWithLayoutSize_itemProvider(
            layout_size: &NSCollectionLayoutSize,
            item_provider: NSCollectionLayoutGroupCustomItemProvider,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other supplementaryItems)]
        pub unsafe fn supplementaryItems(&self)
            -> Id<NSArray<NSCollectionLayoutSupplementaryItem>>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method(setSupplementaryItems:)]
        pub unsafe fn setSupplementaryItems(
            &self,
            supplementary_items: &NSArray<NSCollectionLayoutSupplementaryItem>,
        );

        #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other interItemSpacing)]
        pub unsafe fn interItemSpacing(&self) -> Option<Id<NSCollectionLayoutSpacing>>;

        #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method(setInterItemSpacing:)]
        pub unsafe fn setInterItemSpacing(
            &self,
            inter_item_spacing: Option<&NSCollectionLayoutSpacing>,
        );

        #[cfg(feature = "Foundation_NSArray")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other subitems)]
        pub unsafe fn subitems(&self) -> Id<NSArray<NSCollectionLayoutItem>>;

        #[cfg(feature = "Foundation_NSString")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other visualDescription)]
        pub unsafe fn visualDescription(&self) -> Id<NSString>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutDimension")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutDimension;

    #[cfg(feature = "AppKit_NSCollectionLayoutDimension")]
    unsafe impl ClassType for NSCollectionLayoutDimension {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutDimension")]
unsafe impl NSObjectProtocol for NSCollectionLayoutDimension {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutDimension")]
    unsafe impl NSCollectionLayoutDimension {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other fractionalWidthDimension:)]
        pub unsafe fn fractionalWidthDimension(fractional_width: CGFloat) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other fractionalHeightDimension:)]
        pub unsafe fn fractionalHeightDimension(fractional_height: CGFloat) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other absoluteDimension:)]
        pub unsafe fn absoluteDimension(absolute_dimension: CGFloat) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other estimatedDimension:)]
        pub unsafe fn estimatedDimension(estimated_dimension: CGFloat) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(isFractionalWidth)]
        pub unsafe fn isFractionalWidth(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(isFractionalHeight)]
        pub unsafe fn isFractionalHeight(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(isAbsolute)]
        pub unsafe fn isAbsolute(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(isEstimated)]
        pub unsafe fn isEstimated(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(dimension)]
        pub unsafe fn dimension(&self) -> CGFloat;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutSize;

    #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
    unsafe impl ClassType for NSCollectionLayoutSize {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutSize")]
unsafe impl NSObjectProtocol for NSCollectionLayoutSize {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
    unsafe impl NSCollectionLayoutSize {
        #[cfg(feature = "AppKit_NSCollectionLayoutDimension")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other sizeWithWidthDimension:heightDimension:)]
        pub unsafe fn sizeWithWidthDimension_heightDimension(
            width: &NSCollectionLayoutDimension,
            height: &NSCollectionLayoutDimension,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(feature = "AppKit_NSCollectionLayoutDimension")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other widthDimension)]
        pub unsafe fn widthDimension(&self) -> Id<NSCollectionLayoutDimension>;

        #[cfg(feature = "AppKit_NSCollectionLayoutDimension")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other heightDimension)]
        pub unsafe fn heightDimension(&self) -> Id<NSCollectionLayoutDimension>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutSpacing;

    #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
    unsafe impl ClassType for NSCollectionLayoutSpacing {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
unsafe impl NSObjectProtocol for NSCollectionLayoutSpacing {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
    unsafe impl NSCollectionLayoutSpacing {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other flexibleSpacing:)]
        pub unsafe fn flexibleSpacing(flexible_spacing: CGFloat) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other fixedSpacing:)]
        pub unsafe fn fixedSpacing(fixed_spacing: CGFloat) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(spacing)]
        pub unsafe fn spacing(&self) -> CGFloat;

        #[cfg(not(any(target_os = "ios")))]
        #[method(isFlexibleSpacing)]
        pub unsafe fn isFlexibleSpacing(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(isFixedSpacing)]
        pub unsafe fn isFixedSpacing(&self) -> bool;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutEdgeSpacing")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutEdgeSpacing;

    #[cfg(feature = "AppKit_NSCollectionLayoutEdgeSpacing")]
    unsafe impl ClassType for NSCollectionLayoutEdgeSpacing {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutEdgeSpacing")]
unsafe impl NSObjectProtocol for NSCollectionLayoutEdgeSpacing {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutEdgeSpacing")]
    unsafe impl NSCollectionLayoutEdgeSpacing {
        #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other spacingForLeading:top:trailing:bottom:)]
        pub unsafe fn spacingForLeading_top_trailing_bottom(
            leading: Option<&NSCollectionLayoutSpacing>,
            top: Option<&NSCollectionLayoutSpacing>,
            trailing: Option<&NSCollectionLayoutSpacing>,
            bottom: Option<&NSCollectionLayoutSpacing>,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other leading)]
        pub unsafe fn leading(&self) -> Option<Id<NSCollectionLayoutSpacing>>;

        #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other top)]
        pub unsafe fn top(&self) -> Option<Id<NSCollectionLayoutSpacing>>;

        #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other trailing)]
        pub unsafe fn trailing(&self) -> Option<Id<NSCollectionLayoutSpacing>>;

        #[cfg(feature = "AppKit_NSCollectionLayoutSpacing")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other bottom)]
        pub unsafe fn bottom(&self) -> Option<Id<NSCollectionLayoutSpacing>>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutSupplementaryItem")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutSupplementaryItem;

    #[cfg(feature = "AppKit_NSCollectionLayoutSupplementaryItem")]
    unsafe impl ClassType for NSCollectionLayoutSupplementaryItem {
        #[inherits(NSObject)]
        type Super = NSCollectionLayoutItem;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutSupplementaryItem")]
unsafe impl NSObjectProtocol for NSCollectionLayoutSupplementaryItem {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutSupplementaryItem")]
    unsafe impl NSCollectionLayoutSupplementaryItem {
        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutAnchor",
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSString"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other supplementaryItemWithLayoutSize:elementKind:containerAnchor:)]
        pub unsafe fn supplementaryItemWithLayoutSize_elementKind_containerAnchor(
            layout_size: &NSCollectionLayoutSize,
            element_kind: &NSString,
            container_anchor: &NSCollectionLayoutAnchor,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutAnchor",
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSString"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other supplementaryItemWithLayoutSize:elementKind:containerAnchor:itemAnchor:)]
        pub unsafe fn supplementaryItemWithLayoutSize_elementKind_containerAnchor_itemAnchor(
            layout_size: &NSCollectionLayoutSize,
            element_kind: &NSString,
            container_anchor: &NSCollectionLayoutAnchor,
            item_anchor: &NSCollectionLayoutAnchor,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(zIndex)]
        pub unsafe fn zIndex(&self) -> NSInteger;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setZIndex:)]
        pub unsafe fn setZIndex(&self, z_index: NSInteger);

        #[cfg(feature = "Foundation_NSString")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other elementKind)]
        pub unsafe fn elementKind(&self) -> Id<NSString>;

        #[cfg(feature = "AppKit_NSCollectionLayoutAnchor")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other containerAnchor)]
        pub unsafe fn containerAnchor(&self) -> Id<NSCollectionLayoutAnchor>;

        #[cfg(feature = "AppKit_NSCollectionLayoutAnchor")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemAnchor)]
        pub unsafe fn itemAnchor(&self) -> Option<Id<NSCollectionLayoutAnchor>>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutBoundarySupplementaryItem;

    #[cfg(feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem")]
    unsafe impl ClassType for NSCollectionLayoutBoundarySupplementaryItem {
        #[inherits(NSCollectionLayoutItem, NSObject)]
        type Super = NSCollectionLayoutSupplementaryItem;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem")]
unsafe impl NSObjectProtocol for NSCollectionLayoutBoundarySupplementaryItem {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem")]
    unsafe impl NSCollectionLayoutBoundarySupplementaryItem {
        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSString"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other boundarySupplementaryItemWithLayoutSize:elementKind:alignment:)]
        pub unsafe fn boundarySupplementaryItemWithLayoutSize_elementKind_alignment(
            layout_size: &NSCollectionLayoutSize,
            element_kind: &NSString,
            alignment: NSRectAlignment,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSString"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:)]
        pub unsafe fn boundarySupplementaryItemWithLayoutSize_elementKind_alignment_absoluteOffset(
            layout_size: &NSCollectionLayoutSize,
            element_kind: &NSString,
            alignment: NSRectAlignment,
            absolute_offset: NSPoint,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(extendsBoundary)]
        pub unsafe fn extendsBoundary(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setExtendsBoundary:)]
        pub unsafe fn setExtendsBoundary(&self, extends_boundary: bool);

        #[cfg(not(any(target_os = "ios")))]
        #[method(pinToVisibleBounds)]
        pub unsafe fn pinToVisibleBounds(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setPinToVisibleBounds:)]
        pub unsafe fn setPinToVisibleBounds(&self, pin_to_visible_bounds: bool);

        #[cfg(not(any(target_os = "ios")))]
        #[method(alignment)]
        pub unsafe fn alignment(&self) -> NSRectAlignment;

        #[cfg(not(any(target_os = "ios")))]
        #[method(offset)]
        pub unsafe fn offset(&self) -> NSPoint;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutDecorationItem")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutDecorationItem;

    #[cfg(feature = "AppKit_NSCollectionLayoutDecorationItem")]
    unsafe impl ClassType for NSCollectionLayoutDecorationItem {
        #[inherits(NSObject)]
        type Super = NSCollectionLayoutItem;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutDecorationItem")]
unsafe impl NSObjectProtocol for NSCollectionLayoutDecorationItem {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutDecorationItem")]
    unsafe impl NSCollectionLayoutDecorationItem {
        #[cfg(feature = "Foundation_NSString")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other backgroundDecorationItemWithElementKind:)]
        pub unsafe fn backgroundDecorationItemWithElementKind(element_kind: &NSString) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(zIndex)]
        pub unsafe fn zIndex(&self) -> NSInteger;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setZIndex:)]
        pub unsafe fn setZIndex(&self, z_index: NSInteger);

        #[cfg(feature = "Foundation_NSString")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other elementKind)]
        pub unsafe fn elementKind(&self) -> Id<NSString>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "AppKit_NSCollectionLayoutAnchor")]
    #[cfg(not(any(target_os = "ios")))]
    pub struct NSCollectionLayoutAnchor;

    #[cfg(feature = "AppKit_NSCollectionLayoutAnchor")]
    unsafe impl ClassType for NSCollectionLayoutAnchor {
        type Super = NSObject;
    }
);

#[cfg(feature = "AppKit_NSCollectionLayoutAnchor")]
unsafe impl NSObjectProtocol for NSCollectionLayoutAnchor {}

extern_methods!(
    #[cfg(feature = "AppKit_NSCollectionLayoutAnchor")]
    unsafe impl NSCollectionLayoutAnchor {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other layoutAnchorWithEdges:)]
        pub unsafe fn layoutAnchorWithEdges(edges: NSDirectionalRectEdge) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other layoutAnchorWithEdges:absoluteOffset:)]
        pub unsafe fn layoutAnchorWithEdges_absoluteOffset(
            edges: NSDirectionalRectEdge,
            absolute_offset: NSPoint,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other layoutAnchorWithEdges:fractionalOffset:)]
        pub unsafe fn layoutAnchorWithEdges_fractionalOffset(
            edges: NSDirectionalRectEdge,
            fractional_offset: NSPoint,
        ) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Option<Allocated<Self>>) -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(edges)]
        pub unsafe fn edges(&self) -> NSDirectionalRectEdge;

        #[cfg(not(any(target_os = "ios")))]
        #[method(offset)]
        pub unsafe fn offset(&self) -> NSPoint;

        #[cfg(not(any(target_os = "ios")))]
        #[method(isAbsoluteOffset)]
        pub unsafe fn isAbsoluteOffset(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(isFractionalOffset)]
        pub unsafe fn isFractionalOffset(&self) -> bool;
    }
);

extern_protocol!(
    #[cfg(not(any(target_os = "ios")))]
    pub unsafe trait NSCollectionLayoutContainer: NSObjectProtocol {
        #[cfg(not(any(target_os = "ios")))]
        #[method(contentSize)]
        unsafe fn contentSize(&self) -> NSSize;

        #[cfg(not(any(target_os = "ios")))]
        #[method(effectiveContentSize)]
        unsafe fn effectiveContentSize(&self) -> NSSize;

        #[cfg(not(any(target_os = "ios")))]
        #[method(contentInsets)]
        unsafe fn contentInsets(&self) -> NSDirectionalEdgeInsets;

        #[cfg(not(any(target_os = "ios")))]
        #[method(effectiveContentInsets)]
        unsafe fn effectiveContentInsets(&self) -> NSDirectionalEdgeInsets;
    }

    unsafe impl ProtocolType for dyn NSCollectionLayoutContainer {}
);

extern_protocol!(
    #[cfg(not(any(target_os = "ios")))]
    pub unsafe trait NSCollectionLayoutEnvironment: NSObjectProtocol {
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other container)]
        unsafe fn container(&self) -> Id<ProtocolObject<dyn NSCollectionLayoutContainer>>;
    }

    unsafe impl ProtocolType for dyn NSCollectionLayoutEnvironment {}
);

extern_protocol!(
    #[cfg(not(any(target_os = "ios")))]
    pub unsafe trait NSCollectionLayoutVisibleItem: NSObjectProtocol {
        #[cfg(not(any(target_os = "ios")))]
        #[method(alpha)]
        unsafe fn alpha(&self) -> CGFloat;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setAlpha:)]
        unsafe fn setAlpha(&self, alpha: CGFloat);

        #[cfg(not(any(target_os = "ios")))]
        #[method(zIndex)]
        unsafe fn zIndex(&self) -> NSInteger;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setZIndex:)]
        unsafe fn setZIndex(&self, z_index: NSInteger);

        #[cfg(not(any(target_os = "ios")))]
        #[method(isHidden)]
        unsafe fn isHidden(&self) -> bool;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setHidden:)]
        unsafe fn setHidden(&self, hidden: bool);

        #[cfg(not(any(target_os = "ios")))]
        #[method(center)]
        unsafe fn center(&self) -> NSPoint;

        #[cfg(not(any(target_os = "ios")))]
        #[method(setCenter:)]
        unsafe fn setCenter(&self, center: NSPoint);

        #[cfg(feature = "Foundation_NSString")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other name)]
        unsafe fn name(&self) -> Id<NSString>;

        #[cfg(feature = "Foundation_NSIndexPath")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other indexPath)]
        unsafe fn indexPath(&self) -> Id<NSIndexPath>;

        #[cfg(not(any(target_os = "ios")))]
        #[method(frame)]
        unsafe fn frame(&self) -> NSRect;

        #[cfg(not(any(target_os = "ios")))]
        #[method(bounds)]
        unsafe fn bounds(&self) -> NSRect;

        #[cfg(not(any(target_os = "ios")))]
        #[method(representedElementCategory)]
        unsafe fn representedElementCategory(&self) -> NSCollectionElementCategory;

        #[cfg(feature = "Foundation_NSString")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other representedElementKind)]
        unsafe fn representedElementKind(&self) -> Option<Id<NSString>>;
    }

    unsafe impl ProtocolType for dyn NSCollectionLayoutVisibleItem {}
);

extern_methods!(
    /// Methods declared on superclass `NSCollectionLayoutItem`
    #[cfg(feature = "AppKit_NSCollectionLayoutGroup")]
    unsafe impl NSCollectionLayoutGroup {
        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:)]
        pub unsafe fn itemWithLayoutSize(layout_size: &NSCollectionLayoutSize) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "AppKit_NSCollectionLayoutSupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:supplementaryItems:)]
        pub unsafe fn itemWithLayoutSize_supplementaryItems(
            layout_size: &NSCollectionLayoutSize,
            supplementary_items: &NSArray<NSCollectionLayoutSupplementaryItem>,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSCollectionLayoutItem`
    #[cfg(feature = "AppKit_NSCollectionLayoutSupplementaryItem")]
    unsafe impl NSCollectionLayoutSupplementaryItem {
        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:)]
        pub unsafe fn itemWithLayoutSize(layout_size: &NSCollectionLayoutSize) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:supplementaryItems:)]
        pub unsafe fn itemWithLayoutSize_supplementaryItems(
            layout_size: &NSCollectionLayoutSize,
            supplementary_items: &NSArray<NSCollectionLayoutSupplementaryItem>,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSCollectionLayoutSupplementaryItem`
    #[cfg(feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem")]
    unsafe impl NSCollectionLayoutBoundarySupplementaryItem {
        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutAnchor",
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSString"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other supplementaryItemWithLayoutSize:elementKind:containerAnchor:)]
        pub unsafe fn supplementaryItemWithLayoutSize_elementKind_containerAnchor(
            layout_size: &NSCollectionLayoutSize,
            element_kind: &NSString,
            container_anchor: &NSCollectionLayoutAnchor,
        ) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutAnchor",
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSString"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other supplementaryItemWithLayoutSize:elementKind:containerAnchor:itemAnchor:)]
        pub unsafe fn supplementaryItemWithLayoutSize_elementKind_containerAnchor_itemAnchor(
            layout_size: &NSCollectionLayoutSize,
            element_kind: &NSString,
            container_anchor: &NSCollectionLayoutAnchor,
            item_anchor: &NSCollectionLayoutAnchor,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSCollectionLayoutItem`
    #[cfg(feature = "AppKit_NSCollectionLayoutBoundarySupplementaryItem")]
    unsafe impl NSCollectionLayoutBoundarySupplementaryItem {
        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:)]
        pub unsafe fn itemWithLayoutSize(layout_size: &NSCollectionLayoutSize) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:supplementaryItems:)]
        pub unsafe fn itemWithLayoutSize_supplementaryItems(
            layout_size: &NSCollectionLayoutSize,
            supplementary_items: &NSArray<NSCollectionLayoutSupplementaryItem>,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSCollectionLayoutItem`
    #[cfg(feature = "AppKit_NSCollectionLayoutDecorationItem")]
    unsafe impl NSCollectionLayoutDecorationItem {
        #[cfg(feature = "AppKit_NSCollectionLayoutSize")]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:)]
        pub unsafe fn itemWithLayoutSize(layout_size: &NSCollectionLayoutSize) -> Id<Self>;

        #[cfg(all(
            feature = "AppKit_NSCollectionLayoutSize",
            feature = "AppKit_NSCollectionLayoutSupplementaryItem",
            feature = "Foundation_NSArray"
        ))]
        #[cfg(not(any(target_os = "ios")))]
        #[method_id(@__retain_semantics Other itemWithLayoutSize:supplementaryItems:)]
        pub unsafe fn itemWithLayoutSize_supplementaryItems(
            layout_size: &NSCollectionLayoutSize,
            supplementary_items: &NSArray<NSCollectionLayoutSupplementaryItem>,
        ) -> Id<Self>;
    }
);
