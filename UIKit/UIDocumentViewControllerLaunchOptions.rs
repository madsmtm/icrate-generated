//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIDocumentViewControllerLaunchOptions;

    unsafe impl ClassType for UIDocumentViewControllerLaunchOptions {
        type Super = NSObject;
        type Mutability = MainThreadOnly;
    }
);

unsafe impl NSObjectProtocol for UIDocumentViewControllerLaunchOptions {}

extern_methods!(
    unsafe impl UIDocumentViewControllerLaunchOptions {
        #[cfg(all(
            feature = "UIDocumentBrowserViewController",
            feature = "UIResponder",
            feature = "UIViewController"
        ))]
        #[method_id(@__retain_semantics Other browserViewController)]
        pub unsafe fn browserViewController(&self) -> Retained<UIDocumentBrowserViewController>;

        #[cfg(all(
            feature = "UIDocumentBrowserViewController",
            feature = "UIResponder",
            feature = "UIViewController"
        ))]
        #[method(setBrowserViewController:)]
        pub unsafe fn setBrowserViewController(
            &self,
            browser_view_controller: &UIDocumentBrowserViewController,
        );

        #[method_id(@__retain_semantics Other title)]
        pub unsafe fn title(&self) -> Retained<NSString>;

        #[method(setTitle:)]
        pub unsafe fn setTitle(&self, title: &NSString);

        #[cfg(all(feature = "UIAction", feature = "UIMenuElement"))]
        #[method_id(@__retain_semantics Other primaryAction)]
        pub unsafe fn primaryAction(&self) -> Option<Retained<UIAction>>;

        #[cfg(all(feature = "UIAction", feature = "UIMenuElement"))]
        #[method(setPrimaryAction:)]
        pub unsafe fn setPrimaryAction(&self, primary_action: Option<&UIAction>);

        #[cfg(all(feature = "UIAction", feature = "UIMenuElement"))]
        #[method_id(@__retain_semantics Other secondaryAction)]
        pub unsafe fn secondaryAction(&self) -> Option<Retained<UIAction>>;

        #[cfg(all(feature = "UIAction", feature = "UIMenuElement"))]
        #[method(setSecondaryAction:)]
        pub unsafe fn setSecondaryAction(&self, secondary_action: Option<&UIAction>);

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Other documentTargetView)]
        pub unsafe fn documentTargetView(&self) -> Option<Retained<UIView>>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method(setDocumentTargetView:)]
        pub unsafe fn setDocumentTargetView(&self, document_target_view: Option<&UIView>);

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Other foregroundAccessoryView)]
        pub unsafe fn foregroundAccessoryView(&self) -> Option<Retained<UIView>>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method(setForegroundAccessoryView:)]
        pub unsafe fn setForegroundAccessoryView(&self, foreground_accessory_view: Option<&UIView>);

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Other backgroundAccessoryView)]
        pub unsafe fn backgroundAccessoryView(&self) -> Option<Retained<UIView>>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method(setBackgroundAccessoryView:)]
        pub unsafe fn setBackgroundAccessoryView(&self, background_accessory_view: Option<&UIView>);

        #[cfg(feature = "UIBackgroundConfiguration")]
        #[method_id(@__retain_semantics Other background)]
        pub unsafe fn background(&self) -> Retained<UIBackgroundConfiguration>;

        #[cfg(feature = "UIBackgroundConfiguration")]
        #[method(setBackground:)]
        pub unsafe fn setBackground(&self, background: &UIBackgroundConfiguration);

        #[cfg(all(
            feature = "UIAction",
            feature = "UIDocument",
            feature = "UIMenuElement"
        ))]
        #[method_id(@__retain_semantics Other createDocumentActionWithIntent:)]
        pub unsafe fn createDocumentActionWithIntent(
            intent: &UIDocumentCreationIntent,
            mtm: MainThreadMarker,
        ) -> Retained<UIAction>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UIDocumentViewControllerLaunchOptions {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);
