//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct UITabBarControllerSidebarLayout(pub NSInteger);
impl UITabBarControllerSidebarLayout {
    #[doc(alias = "UITabBarControllerSidebarLayoutAutomatic")]
    pub const Automatic: Self = Self(0);
    #[doc(alias = "UITabBarControllerSidebarLayoutOverlap")]
    pub const Overlap: Self = Self(1);
    #[doc(alias = "UITabBarControllerSidebarLayoutTile")]
    pub const Tile: Self = Self(2);
}

unsafe impl Encode for UITabBarControllerSidebarLayout {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for UITabBarControllerSidebarLayout {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UITabSidebarScrollTarget;

    unsafe impl ClassType for UITabSidebarScrollTarget {
        type Super = NSObject;
        type Mutability = MainThreadOnly;
    }
);

unsafe impl NSObjectProtocol for UITabSidebarScrollTarget {}

extern_methods!(
    unsafe impl UITabSidebarScrollTarget {
        #[method_id(@__retain_semantics Other targetForHeader)]
        pub unsafe fn targetForHeader(mtm: MainThreadMarker) -> Retained<Self>;

        #[method_id(@__retain_semantics Other targetForFooter)]
        pub unsafe fn targetForFooter(mtm: MainThreadMarker) -> Retained<Self>;

        #[cfg(feature = "UITab")]
        #[method_id(@__retain_semantics Other targetForTab:)]
        pub unsafe fn targetForTab(tab: &UITab) -> Retained<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl UITabSidebarScrollTarget {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UITabBarControllerSidebar;

    unsafe impl ClassType for UITabBarControllerSidebar {
        type Super = NSObject;
        type Mutability = MainThreadOnly;
    }
);

unsafe impl NSObjectProtocol for UITabBarControllerSidebar {}

extern_methods!(
    unsafe impl UITabBarControllerSidebar {
        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn UITabBarControllerSidebarDelegate>>>;

        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn UITabBarControllerSidebarDelegate>>,
        );

        #[method(isHidden)]
        pub unsafe fn isHidden(&self) -> bool;

        #[method(setHidden:)]
        pub unsafe fn setHidden(&self, hidden: bool);

        #[method(preferredLayout)]
        pub unsafe fn preferredLayout(&self) -> UITabBarControllerSidebarLayout;

        #[method(setPreferredLayout:)]
        pub unsafe fn setPreferredLayout(&self, preferred_layout: UITabBarControllerSidebarLayout);

        #[cfg(feature = "UIContentConfiguration")]
        #[method_id(@__retain_semantics Other headerContentConfiguration)]
        pub unsafe fn headerContentConfiguration(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn UIContentConfiguration>>>;

        #[cfg(feature = "UIContentConfiguration")]
        #[method(setHeaderContentConfiguration:)]
        pub unsafe fn setHeaderContentConfiguration(
            &self,
            header_content_configuration: Option<&ProtocolObject<dyn UIContentConfiguration>>,
        );

        #[cfg(feature = "UIContentConfiguration")]
        #[method_id(@__retain_semantics Other footerContentConfiguration)]
        pub unsafe fn footerContentConfiguration(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn UIContentConfiguration>>>;

        #[cfg(feature = "UIContentConfiguration")]
        #[method(setFooterContentConfiguration:)]
        pub unsafe fn setFooterContentConfiguration(
            &self,
            footer_content_configuration: Option<&ProtocolObject<dyn UIContentConfiguration>>,
        );

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method_id(@__retain_semantics Other bottomBarView)]
        pub unsafe fn bottomBarView(&self) -> Option<Retained<UIView>>;

        #[cfg(all(feature = "UIResponder", feature = "UIView"))]
        #[method(setBottomBarView:)]
        pub unsafe fn setBottomBarView(&self, bottom_bar_view: Option<&UIView>);

        #[method(scrollToTarget:animated:)]
        pub unsafe fn scrollToTarget_animated(
            &self,
            target: &UITabSidebarScrollTarget,
            animated: bool,
        );

        #[cfg(feature = "UITab")]
        #[method(reconfigureItemForTab:)]
        pub unsafe fn reconfigureItemForTab(&self, tab: &UITab);

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    }
);

extern_protocol!(
    pub unsafe trait UITabBarControllerSidebarDelegate: NSObjectProtocol {
        #[cfg(all(
            feature = "UIResponder",
            feature = "UITabBarController",
            feature = "UIViewController"
        ))]
        #[optional]
        #[method(tabBarController:sidebarVisibilityDidChange:)]
        unsafe fn tabBarController_sidebarVisibilityDidChange(
            &self,
            tab_bar_controller: &UITabBarController,
            sidebar: &UITabBarControllerSidebar,
        );

        #[cfg(all(
            feature = "UIResponder",
            feature = "UITabBarController",
            feature = "UITabSidebarItem",
            feature = "UIViewController"
        ))]
        #[optional]
        #[method_id(@__retain_semantics Other tabBarController:sidebar:itemForRequest:)]
        unsafe fn tabBarController_sidebar_itemForRequest(
            &self,
            tab_bar_controller: &UITabBarController,
            sidebar: &UITabBarControllerSidebar,
            request: &UITabSidebarItemRequest,
        ) -> Retained<UITabSidebarItem>;

        #[cfg(all(
            feature = "UIResponder",
            feature = "UITabBarController",
            feature = "UITabSidebarItem",
            feature = "UIViewController"
        ))]
        #[optional]
        #[method(tabBarController:sidebar:updateItem:)]
        unsafe fn tabBarController_sidebar_updateItem(
            &self,
            tab_bar_controller: &UITabBarController,
            sidebar: &UITabBarControllerSidebar,
            item: &UITabSidebarItem,
        );

        #[cfg(all(
            feature = "UIResponder",
            feature = "UITab",
            feature = "UITabBarController",
            feature = "UIViewController"
        ))]
        #[optional]
        #[method(tabBarController:sidebar:willBeginDisplayingTab:)]
        unsafe fn tabBarController_sidebar_willBeginDisplayingTab(
            &self,
            tab_bar_controller: &UITabBarController,
            sidebar: &UITabBarControllerSidebar,
            tab: &UITab,
        );

        #[cfg(all(
            feature = "UIResponder",
            feature = "UITab",
            feature = "UITabBarController",
            feature = "UIViewController"
        ))]
        #[optional]
        #[method(tabBarController:sidebar:didEndDisplayingTab:)]
        unsafe fn tabBarController_sidebar_didEndDisplayingTab(
            &self,
            tab_bar_controller: &UITabBarController,
            sidebar: &UITabBarControllerSidebar,
            tab: &UITab,
        );

        #[cfg(all(
            feature = "UIResponder",
            feature = "UISwipeActionsConfiguration",
            feature = "UITab",
            feature = "UITabBarController",
            feature = "UIViewController"
        ))]
        #[optional]
        #[method_id(@__retain_semantics Other tabBarController:sidebar:leadingSwipeActionsConfigurationForTab:)]
        unsafe fn tabBarController_sidebar_leadingSwipeActionsConfigurationForTab(
            &self,
            tab_bar_controller: &UITabBarController,
            sidebar: &UITabBarControllerSidebar,
            tab: &UITab,
        ) -> Option<Retained<UISwipeActionsConfiguration>>;

        #[cfg(all(
            feature = "UIResponder",
            feature = "UISwipeActionsConfiguration",
            feature = "UITab",
            feature = "UITabBarController",
            feature = "UIViewController"
        ))]
        #[optional]
        #[method_id(@__retain_semantics Other tabBarController:sidebar:trailingSwipeActionsConfigurationForTab:)]
        unsafe fn tabBarController_sidebar_trailingSwipeActionsConfigurationForTab(
            &self,
            tab_bar_controller: &UITabBarController,
            sidebar: &UITabBarControllerSidebar,
            tab: &UITab,
        ) -> Option<Retained<UISwipeActionsConfiguration>>;

        #[cfg(all(
            feature = "UIContextMenuConfiguration",
            feature = "UIResponder",
            feature = "UITab",
            feature = "UITabBarController",
            feature = "UIViewController"
        ))]
        #[optional]
        #[method_id(@__retain_semantics Other tabBarController:sidebar:contextMenuConfigurationForTab:)]
        unsafe fn tabBarController_sidebar_contextMenuConfigurationForTab(
            &self,
            tab_bar_controller: &UITabBarController,
            sidebar: &UITabBarControllerSidebar,
            tab: &UITab,
        ) -> Option<Retained<UIContextMenuConfiguration>>;
    }

    unsafe impl ProtocolType for dyn UITabBarControllerSidebarDelegate {}
);
